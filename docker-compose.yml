version: '3.8'

services:
  # MS SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    restart: unless-stopped
    user: root
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=StrongP@ssw0rd!
      - MSSQL_PID=Developer
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./init:/docker-entrypoint-initdb.d
      - sqlserver_system:/.system
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    networks:
      - via-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=TabloidDb;User Id=sa;Password=StrongP@ssw0rd!;TrustServerCertificate=True;
    depends_on:
      sqlserver: { condition: service_started }
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - via-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M
    networks:
      - via-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  via-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.28.0.0/16"

volumes:
  sqlserver_data:
  sqlserver_system: { }
